process VALID  = 
{
  untracked PSet maxEvents = {untracked int32 input = 100000}
  
  # Include the RandomNumberGeneratorService definition
  include "FastSimulation/Configuration/data/RandomServiceInitialization.cff"

 source = FlatRandomPtGunSource 
  {	 
    untracked uint32 firstRun  = 1
    untracked      PSet  PGunParameters =
    {
      untracked vint32 PartID = {13} 
      untracked double MinEta = -3.0
      untracked double MaxEta = 3.0
      untracked double MinPhi = -3.14159265358979323846  # it must be in radians
      untracked double MaxPhi =  3.14159265358979323846
      untracked double MinPt   = 0.999
      untracked double MaxPt   = 1.001
    }      
    untracked int32 Verbosity = 0 # for printouts, set it to 1 (or greater)   
  }	
  
  # Famos sequences
  include "FastSimulation/Configuration/data/CommonInputsFake.cff"
  include "FastSimulation/Configuration/data/FamosSequences.cff"
  replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
  replace famosSimHits.SimulateCalorimetry = false
  replace famosSimHits.SimulateTracking = true
###Configuration C: no overlap cleaning, split hits 
#  replace iterativeFirstTrackCandidatesWithTriplets.OverlapCleaning = false
#  replace iterativeFirstTrackCandidatesWithTriplets.SplitHits = true
#  replace iterativeFirstTrackCandidatesWithPairs.OverlapCleaning =false
#  replace iterativeFirstTrackCandidatesWithPairs.SplitHits = true
  
  module o1 = PoolOutputModule { untracked string fileName = "test_mu_1GeV.root" }
  
  include "FastSimulation/Validation/data/TrackValidation_HighPurity.cff"
  replace multiTrackValidator.out = "valid_mu_1GeV.root"	
  
  path p1 = {  famosWithTracks, valid  }
  
###    endpath outpath = { o1 }
  
  # Keep the logging output to a nice level #
  include "FWCore/MessageService/data/MessageLogger.cfi"
  replace MessageLogger.destinations = {"detailedInfo_mu1.txt"}
}		
  
