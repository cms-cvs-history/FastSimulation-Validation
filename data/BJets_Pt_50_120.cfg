process HLT  = 
{

    # The number of events to be processed.
  untracked PSet configurationMetadata = 
{
untracked string version = "$Revision: 1.5 $"
untracked string name = "$Source: /cvs_server/repositories/CMSSW/CMSSW/FastSimulation/Validation/data/BJets_Pt_50_120.cfg,v $"
untracked string annotation = "RelVal FastSim b jets with pt hat 50-120GeV"
}
  untracked PSet ReleaseValidation = 
{
untracked uint32 totalNumberOfEvents = 25000
untracked uint32 eventsPerJob = 1000
untracked string primaryDatasetName = 'RelValFastSimBJets_Pt_50_120'
}
    untracked PSet maxEvents = {untracked int32 input = 10}
    
    # Include the RandomNumberGeneratorService definition
    include "FastSimulation/Configuration/data/RandomServiceInitialization.cff"

  include "Configuration/Generator/data/PythiaUESettings.cfi"
source = PythiaSource 
{
untracked int32 pythiaPylistVerbosity = 0
untracked bool pythiaHepMCVerbosity = false
untracked int32 maxEventsToPrint = 0
untracked double filterEfficiency = 1.

PSet PythiaParameters =
{
# This is a vector of ParameterSet names to be read, in this order
vstring parameterSets =
{
"pythiaUESettings",
"processParameters"
}

using pythiaUESettingsBlock

vstring processParameters =
{
'MSEL=0 ! User defined processes',
'MSUB(81)=1 ! qq->QQ massive',
'MSUB(82)=1 ! gg->QQ massive',
'MSTP(7)=5 ! 5 for BB_bar',
'CKIN(3)=50. ! Pt hat lower cut',
'CKIN(4)=120. ! Pt hat upper cut',
'CKIN(13)=0. ! etamin',
'CKIN(14)=2.5 ! etamax',
'CKIN(15)=-2.5 ! -etamax',
'CKIN(16)=0. ! -etamin'
}
}
}
     
    # Famos sequences (With HLT)
    include "FastSimulation/Configuration/data/CommonInputsFake.cff"
    include "FastSimulation/Configuration/data/FamosSequences.cff"

    # L1 Emulator and HLT Setup
    include "FastSimulation/HighLevelTrigger/data/common/HLTSetup.cff"

    // If you want to turn on/off pile-up
    replace famosPileUp.PileUpSimulator.averageNumber = 0.0
    // Parametrized magnetic field
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    // You may not want to simulate everything for your study
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true

    service = Timing { }

   include "PhysicsTools/HepMCCandAlgos/data/genEventWeight.cfi"
   include "PhysicsTools/HepMCCandAlgos/data/genEventScale.cfi"


    # Simulation
    path simulation = { simulationWithFamos & genEventScale & genEventWeight }


    // prescale factors at L1 : useful for testing all L1 paths, but commented by default
    # include "L1TriggerConfig/L1GtConfigProducers/data/L1GtFactorsUnprescale.cff"

    # No reconstruction
     #    sequence hltEnd = { dummyModule }

    # Reconstruction of all events, including those rejected at L1/HLT
    sequence hltEnd = { dummyModule }

    # HLT paths
    include "HLTrigger/Configuration/data/main/HLTpaths.cff"
    # Note : if your process is not called HLT, you have to change that! 
    # replace hltTrigReport.HLTriggerResults = TriggerResults::HLT

    # No reconstruction
    # path reconstruction = { reconstructionWithFamos }

    path reconstruction = { 
	doCalo & towerMakerForAll & // Work-around because of a bug in HLT 
	reconstructionWithFamos // Reconstruction sequence
    }
 
    # To write out events 
    include "FastSimulation/Configuration/data/EventContent.cff"


    module o1 = PoolOutputModule { 
	using  FEVTSIMEventContent
	untracked string fileName = "FEVTWithHLT.root" 
        untracked PSet dataset ={	 
          untracked string dataTier = "GEN-SIM-DIGI-RECO"
        }
    }
    endpath outpath = { o1 }
    
    # Keep the logging output to a nice level #
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.destinations = {"detailedInfo.txt"}
    
}		
