process HLT  = 
{

    # The number of events to be processed.
  untracked PSet configurationMetadata = 
{
untracked string version = "$Revision: 1.9 $"
untracked string name = "$Source: /cvs_server/repositories/CMSSW/CMSSW/Configuration/ReleaseValidation/data/RS1GravitonGammaM1500.cfg,v $"
untracked string annotation = "RelVal FastSim RS-1 Graviton, M=1500 GeV, with decay to photons"
}
  untracked PSet ReleaseValidation = 
{
untracked uint32 totalNumberOfEvents = 25000
untracked uint32 eventsPerJob = 5000
untracked string primaryDatasetName = 'RelValFastSimRS1GravitonGammaM1500'
}
    untracked PSet maxEvents = {untracked int32 input = 10}
    
    service =  RandomNumberGeneratorService {
	# This is to initialize the random engine of the source
	untracked uint32 sourceSeed = 123456789
	# This is to initialize the random engines of Famos
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 famosPileUp = 918273
	    untracked uint32 famosSimHits = 13579
	    untracked uint32 siTrackerGaussianSmearingRecHits = 24680
	    untracked uint32 caloRecHits = 654321
	    untracked uint32 paramMuons = 54525
	    untracked uint32 l1ParamMuons = 54525
	    untracked uint32 MuonSimHits = 97531
	    untracked uint32 muonDTDigis = 67673876
	    untracked uint32 muonCSCDigis = 525432
	    untracked uint32 muonRPCDigis = 524964
	}
    }
    
    // If you want to use the (CMS default) CLHEP random, 
    // set these ones to false
    replace famosPileUp.UseTRandomEngine = true
    replace famosSimHits.UseTRandomEngine = true
    replace siTrackerGaussianSmearingRecHits.UseTRandomEngine = true
    replace caloRecHits.UseTRandomEngine = true
    replace paramMuons.UseTRandomEngine = true


  source = PythiaSource 
{
untracked int32 pythiaPylistVerbosity = 0
untracked bool pythiaHepMCVerbosity = false
untracked int32 maxEventsToPrint = 0
untracked double filterEfficiency = 1.

PSet PythiaParameters =
{
# This is a vector of ParameterSet names to be read, in this order
vstring parameterSets =
{
"pythiaUESettings",
"processParameters"
}

include "Configuration/Generator/data/PythiaUESettings.cfi"

vstring processParameters =
{
'MSEL =0 ',
'MSUB(391) =1 ',
'MSUB(392) =1 ',
'PMAS(347,1) =1500. ! minv ',
'PARP(50) = 0.54 ! 0.54 == c=0.1',
'MDME(4158,1)=0 ',
'MDME(4159,1)=0 ',
'MDME(4160,1)=0 ',
'MDME(4161,1)=0 ',
'MDME(4162,1)=0 ',
'MDME(4163,1)=0 ',
'MDME(4164,1)=0 ',
'MDME(4165,1)=0 ',
'MDME(4166,1)=0 ',
'MDME(4167,1)=0 ',
'MDME(4168,1)=0 ',
'MDME(4169,1)=0 ',
'MDME(4170,1)=0 ',
'MDME(4170,1)=0 ',
'MDME(4171,1)=0 ',
'MDME(4172,1)=0 ',
'MDME(4173,1)=0 ',
'MDME(4174,1)=0 ',
'MDME(4175,1)=1 ! gamma gamma ',
'MDME(4176,1)=0 ',
'MDME(4177,1)=0 ',
'MDME(4178,1)=0 ',
'CKIN(3)=20. ! minimum pt hat for hard interactions',
'CKIN(4)=-1. ! maximum pt hat for hard interactions'
}
}
}
     
    # Famos sequences (With HLT)
    include "FastSimulation/Configuration/data/CommonInputsFake.cff"
    include "FastSimulation/Configuration/data/FamosSequences.cff"

    # L1 Emulator and HLT Setup
    include "FastSimulation/HighLevelTrigger/data/common/HLTSetup.cff"

    // If you want to turn on/off pile-up
    replace famosPileUp.PileUpSimulator.averageNumber = 0.0
    // Parametrized magnetic field
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    // You may not want to simulate everything for your study
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true

    service = Timing { }

   include "PhysicsTools/HepMCCandAlgos/data/genEventWeight.cfi"
   include "PhysicsTools/HepMCCandAlgos/data/genEventScale.cfi"


    # Simulation
    path simulation = { simulationWithFamos & genEventScale & genEventWeight }


    /*
    // prescale factors at L1 : useful for testing all L1 paths, but commented by default
    replace l1GtFactors.PrescaleFactors = {
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1,       1,       1,
	1,       1,       1,       1,       1,       1,       1,       1
    }
    */

    # No reconstruction
     #    sequence hltEnd = { dummyModule }

    # Reconstruction of all events, including those rejected at L1/HLT
    sequence hltEnd = { dummyModule }

    # HLT paths
    include "HLTrigger/Configuration/data/main/HLTpaths.cff"
    # Note : if your process is not called HLT, you have to change that! 
    replace hltTrigReport.HLTriggerResults = TriggerResults::HLT

    # No reconstruction
    # path reconstruction = { reconstructionWithFamos }

    path reconstruction = { 
	doCalo & towerMakerForAll & // Work-around because of a bug in HLT 
	reconstructionWithFamos // Reconstruction sequence
    }
 
    # To write out events 
    include "FastSimulation/Configuration/data/EventContent.cff"


    module o1 = PoolOutputModule { 
	using  FEVTSIMEventContent
	untracked string fileName = "FEVTWithHLT.root" 
        untracked PSet dataset ={	 
          untracked string dataTier = "GEN-SIM-DIGI-RECO"
        }
    }
    endpath outpath = { o1 }
    
    # Keep the logging output to a nice level #
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.destinations = {"detailedInfo.txt"}
    
}		
